// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaxSender.Data;

#nullable disable

namespace PaxSender.Migrations.ContextoMigrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("Almacen", b =>
                {
                    b.Property<int>("AlmacenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlmacenId");

                    b.ToTable("Almacen");

                    b.HasData(
                        new
                        {
                            AlmacenId = 1,
                            Identificador = "ALMACEN GENERAL",
                            Visible = true
                        });
                });

            modelBuilder.Entity("Articulo", b =>
                {
                    b.Property<int>("ArticuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlmacenId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Existencia")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha_Caducidad")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Entrada")
                        .HasColumnType("TEXT");

                    b.Property<int>("Num_Reorden")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Peso")
                        .HasColumnType("REAL");

                    b.Property<double?>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("SuplidorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArticuloId");

                    b.ToTable("Articulo");

                    b.HasData(
                        new
                        {
                            ArticuloId = 1,
                            AlmacenId = 1,
                            CategoriaId = 4,
                            Costo = 0.0,
                            Descripcion = "PAQUETE",
                            Estado = "ACTIVO",
                            Existencia = 10000000,
                            Fecha_Caducidad = new DateTime(2023, 8, 11, 3, 58, 34, 991, DateTimeKind.Local).AddTicks(6775),
                            Fecha_Entrada = new DateTime(2023, 8, 11, 3, 58, 34, 991, DateTimeKind.Local).AddTicks(6767),
                            Num_Reorden = 10,
                            Peso = 0.0,
                            Precio = 0.0,
                            SuplidorId = 1,
                            Visible = true
                        });
                });

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Descripcion = "Inmuebles",
                            Visible = true
                        },
                        new
                        {
                            CategoriaId = 2,
                            Descripcion = "Alimentos",
                            Visible = true
                        },
                        new
                        {
                            CategoriaId = 3,
                            Descripcion = "Ropa",
                            Visible = true
                        },
                        new
                        {
                            CategoriaId = 4,
                            Descripcion = "PaxSenderCategory",
                            Visible = true
                        });
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("RNC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Celular = "0",
                            Direccion = "0",
                            Fecha_Registro = new DateTime(2023, 8, 11, 3, 58, 34, 991, DateTimeKind.Local).AddTicks(6492),
                            Nombre = "GENERAL",
                            Visible = true
                        });
                });

            modelBuilder.Entity("Envio", b =>
                {
                    b.Property<int>("EnvioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destinatario_Referencia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Destino")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Total")
                        .HasColumnType("REAL");

                    b.Property<double?>("Total_Envio")
                        .HasColumnType("REAL");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("EnvioId");

                    b.ToTable("Envio");
                });

            modelBuilder.Entity("EnvioDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Peso")
                        .HasColumnType("REAL");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleId");

                    b.HasIndex("PedidoId");

                    b.ToTable("EnvioDetalle");
                });

            modelBuilder.Entity("PaxSender.Entrada", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Razon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("cantidad_Resultante")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("cantidad_anterior")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrdenID");

                    b.ToTable("Entrada");
                });

            modelBuilder.Entity("PaxSender.Models.Suplidor", b =>
                {
                    b.Property<int>("SuplidorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Celular")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("RNC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("SuplidorId");

                    b.ToTable("Suplidor");

                    b.HasData(
                        new
                        {
                            SuplidorId = 1,
                            Celular = "0",
                            Correo = "PaxSender.Net",
                            Direccion = "PaxSenderMainDireccion",
                            Fecha_Registro = new DateTime(2023, 8, 11, 3, 58, 34, 991, DateTimeKind.Local).AddTicks(6536),
                            Nombre = "PaxSenderEssensials",
                            RNC = "MainRNC",
                            Telefono = "0",
                            Visible = true
                        });
                });

            modelBuilder.Entity("PaxSender.Models.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("SuplidorId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Total")
                        .HasColumnType("REAL");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("VentaId");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("PaxSender.Models.VentaDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Precio")
                        .HasColumnType("REAL");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("DetalleId");

                    b.HasIndex("CompraId");

                    b.ToTable("VentaDetalle");
                });

            modelBuilder.Entity("PaxSender.Salida", b =>
                {
                    b.Property<int>("OrdenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Razon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("cantidad_Resultante")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("cantidad_anterior")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrdenID");

                    b.ToTable("Salida");
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destino")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Total")
                        .HasColumnType("REAL");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("PedidoDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoDetalle");
                });

            modelBuilder.Entity("Sucursal", b =>
                {
                    b.Property<int>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("SucursalId");

                    b.ToTable("Sucursal");

                    b.HasData(
                        new
                        {
                            SucursalId = 1,
                            Direccion = "NAGUA RD",
                            Fecha_Registro = new DateTime(2023, 8, 11, 3, 58, 34, 991, DateTimeKind.Local).AddTicks(6804),
                            Nombre = "Principal DO",
                            Visible = true
                        });
                });

            modelBuilder.Entity("EnvioDetalle", b =>
                {
                    b.HasOne("Envio", null)
                        .WithMany("DetalleEnvio")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaxSender.Models.VentaDetalle", b =>
                {
                    b.HasOne("PaxSender.Models.Venta", null)
                        .WithMany("DetalleVenta")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PedidoDetalle", b =>
                {
                    b.HasOne("Pedido", null)
                        .WithMany("DetallePedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Envio", b =>
                {
                    b.Navigation("DetalleEnvio");
                });

            modelBuilder.Entity("PaxSender.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Navigation("DetallePedido");
                });
#pragma warning restore 612, 618
        }
    }
}
