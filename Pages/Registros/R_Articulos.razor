 @page "/R_Articulos"
@page "/R_Articulos/{ArticuloId:int}"

@inject ArticuloBLL articuloBLL
@inject CategoriaBLL categoriaBLL
@inject NotificationService Notify

 <EditForm Model="articulo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card shadow-lg">
        <div class="card-header">
            <h3 class="card-title">
                Registro de Artículos
                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                    class="bi bi-truck" viewBox="0 0 16 16">
                    <path
                        d="M0 3.5A1.5 1.5 0 0 1 1.5 2h9A1.5 1.5 0 0 1 12 3.5V5h1.02a1.5 1.5 0 0 1 1.17.563l1.481 1.85a1.5 1.5 0 0 1 .329.938V10.5a1.5 1.5 0 0 1-1.5 1.5H14a2 2 0 1 1-4 0H5a2 2 0 1 1-3.998-.085A1.5 1.5 0 0 1 0 10.5v-7zm1.294 7.456A1.999 1.999 0 0 1 4.732 11h5.536a2.01 2.01 0 0 1 .732-.732V3.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .294.456zM12 10a2 2 0 0 1 1.732 1h.768a.5.5 0 0 0 .5-.5V8.35a.5.5 0 0 0-.11-.312l-1.48-1.85A.5.5 0 0 0 13.02 6H12v4zm-9 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm9 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z" />
                </svg>
            </h3>
        </div>
        <div class="card-body">
            <hr>

            <div class="sml col-3">
                <label>ArticuloId</label>
                <div class="input-group">
                    <InputNumber @bind-Value="articulo.ArticuloId" class="form-control " />
                    <div class="input-group-append">
                        <div class="input-group-append">
                            <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="buscarButton">
                            <i class="oi oi-magnifying-glass" />
                        </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-4">
                    <label>Descripción</label>
                    <input type="text" @bind="articulo.Descripcion" required placeholder="Descripción" class="form-control" />
                </div>
                <div class="col-4">
                    <label>Categoría</label>
                    <select @bind="articulo.CategoriaId" placeholder="Selecciona una categoria" class="form-select">
                        @foreach (var item in L_Categorias)
                        {
                                        <option value="@item.CategoriaId">@item.Descripcion</option>
                        }
                    </select>
                </div>
                <div class="col-4">
                    <label>Fecha Caducidad</label>
                    <RadzenDatePicker @bind-Value="@articulo.Fecha_Caducidad" ShowTime="true" HourFormat="12"
                        DateFormat="MM/dd/yyyy h:mm tt" class="form-control" Name="Fecha" />
                    @*<RadzenRequiredValidator Component="Fecha" Text="Nombre es Campo Requerido" Popup=true
                        Style="position: absolute" />*@
                </div>
            </div>

            <div class="row">
                <div class="col-4">
                    <label>Costo</label>
                    <RadzenNumeric ShowUpDown="false" @bind-Value="articulo.Costo" class="form-control" />
                </div>
                <div class="col-4">
                    <label>Precio</label>
                    <RadzenNumeric ShowUpDown="false" @bind-Value="articulo.Precio" class="form-control" />
                </div>
                <div class="col-4">
                    <label>&nbsp;</label> <!-- Espacio en blanco para alinear con las etiquetas anteriores -->
                    <!-- Agregar más campos si es necesario -->
                </div>
            </div>
        </div>

        @*Botones*@
        <div class="card-footer">
            <div class="form-group text-left" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo" title="Nuevo cliente">
                    Nuevo
                </button>

                <button type="submit" class="btn btn-lg btn-success" title="Guardar cliente">
                    Guardar
                </button>

                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar" title="Eliminar cliente">
                    Eliminar
                </button>
            </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public int? ArticuloId { get; set; }
    public Articulo articulo { get; set; } = new Articulo();

    public List<Categoria> L_Categorias = new List<Categoria>();

    protected override void OnInitialized()
    {
        if (ArticuloId.HasValue)
        {
            // si recibimos un {SistemaId:int} por parametro asignarlo
            // y luego buscarla para que se vea en pantalla
            articulo.ArticuloId = ArticuloId.Value;
            Buscar();
        }

        L_Categorias = categoriaBLL.GetList(c => true);

    }
    public void Buscar()
    {
        var articuloEncontrado = articuloBLL.Buscar(articulo.ArticuloId);
        if (articuloEncontrado != null)
        {
            articulo = articuloEncontrado;
        }
        else
        {
            Notify.ShowNotification(
            titulo: "Error de Busqueda",
            mensaje: "Registro no encontrado",
            NotificationSeverity.Error);
        }
    }

    public void Nuevo()
    {
        this.articulo = new Articulo();
    }

    public void Guardar()
    {
        try
        {
            if (!Validar())
            {
                Notify.ShowNotification(
                    titulo: "Validación",
                    mensaje: "Error Revise los campos",
                    NotificationSeverity.Error);
                return;
            }

            var guardo = articuloBLL.Guardar(this.articulo);
            if (guardo)
            {
                Notify.ShowNotification(
                    titulo: "Exito",
                    mensaje: "Guardado correctamente!",
                    NotificationSeverity.Success);
                Nuevo();
            }
            else
            {
                Notify.ShowNotification(
                    titulo: "Error",
                    mensaje: "Ocurrio un error y no fue posible guardar",
                    NotificationSeverity.Error);
            }
        }
        catch (Exception excepcion) { }
    }

    public void Eliminar()
    {
        try
        {
            if (articuloBLL.Eliminar(this.articulo))
            {
                Notify.ShowNotification(
                    titulo: "Exito",
                    mensaje: "Eliminado con Exito",
                    NotificationSeverity.Success);
                Nuevo();
            }
            else
            {
                Notify.ShowNotification(
                    titulo: "Error",
                    mensaje: "Ocurrio un error y no fue posible eliminar",
                    NotificationSeverity.Error);
            }

        }catch (Exception excepcion) { }
    }

    bool Validar()
    {
        //todo: Validar que el nombre del sistema no este repetido.
        return true;
    }

}