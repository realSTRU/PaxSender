 @page "/R_Sucursal"
@page "/R_Sucursal/{SucursalId:int}"
@inject SucursalBLL sucursalBLL
@inject NotificationService Notify

@* Registro de categoria de productos *@
@inject AuthenticationStateProvider Authentication


<EditForm Model="sucursal" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

     <RadzenCard class="rz-shadow-7 rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12">
        <RadzenFieldset>
            <HeaderTemplate>
                <span class="d-inline-flex align-items-center align-middle">
                    <RadzenIcon Icon="category" class="me-1" /><b>Registro de Sucursales</b>
                </span>
            </HeaderTemplate>
            <ChildContent>

            <RadzenStack>
                                <div class="sml col-3">
                        <label>SucursalId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="sucursal.SucursalId" class="form-control " />
                            <div class="input-group-append">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-lg btn-primary"
                @onclick="Buscar">Buscar</button>

                                </div>
                            </div>
                            </div>
                            </div>
        @*...................... Descripcion ......................*@

                <div class="row">

                    <div class="sml col-3">
                        <label>Nombre Sucursal.</label>
                        <input type="text" required @bind="sucursal.Nombre" placeholder="Nombre Sucursal" class="form-control" />
                    </div>

                     <div class="sml col-3">
                        <label>Dirección.</label>
                        <InputText @bind-Value="sucursal.Direccion" placeholder="Direccion Sucursal" class="form-control" />
                    </div>
                    </div>
            </RadzenStack>
            

            <br>

            <RadzenStack>
                <center>
                    <RadzenButton Click="Nuevo"Text="Nuevo" Icon="refresh" ButtonStyle="ButtonStyle.Secondary" />
                    <RadzenButton Click="Guardar"Text="Guardar" Icon="save" ButtonStyle="ButtonStyle.Success" />
                    <RadzenButton Click="Eliminar"Text="Eliminar" Icon="delete" ButtonStyle="ButtonStyle.Danger" />
                </center>
            </RadzenStack>


            </ChildContent>
        </RadzenFieldset>
    </RadzenCard>   
</EditForm>



@code {

  [Parameter]
  public int SucursalId { get; set; }

  private Sucursal sucursal { get; set; } = new Sucursal();
  public List<Categoria> lista { get; set; } = new List<Categoria>();

  protected override void OnInitialized()
  {
    sucursal.SucursalId = 0;
    if (SucursalId > 0)
    {
      sucursal.SucursalId = SucursalId;
      Buscar();
    }
  }
  void Buscar()
  {
    var encontrado = sucursalBLL.Buscar(sucursal.SucursalId);
    if (encontrado != null)
    {
      sucursal = encontrado;
      this.sucursal = encontrado;
      Notify.ShowNotification("Busqueda", "Registro encontrado", NotificationSeverity.Success);
    }
    else
    {
      Notify.ShowNotification("Busqueda", "Registro no encontrado", NotificationSeverity.Warning);
    }
  }
  void Nuevo()
  {
    this.sucursal = new Sucursal();
    Notify.ShowNotification("Limpieza", "Registro Limpiado luego de la acción con exito!", NotificationSeverity.Info);

  }
  void Guardar()
  {
    try
    {

      if(Validar())
      {
          if (sucursalBLL.Guardar(sucursal))
        {
          Nuevo();
          Notify.ShowNotification("Guardado", "Guardado con exito!", NotificationSeverity.Success);
        }
      }
      else
      {
        Notify.ShowNotification("Guardado", "No se ha guardado nada revise los campos", NotificationSeverity.Error);
      }
    }
    catch (Exception exception) { }

  }
  void Eliminar()
  {
    try
    {
      if(Validar())
      {
          if (sucursalBLL.Eliminar(sucursal))
        {
          Nuevo();
          Notify.ShowNotification("Eliminado", "Eliminado con exito!", NotificationSeverity.Success);
        }
      }
      else
      {
        Notify.ShowNotification("Eliminado", "Error al eliminar revise que haya algo a eliminar", NotificationSeverity.Error);
      }
    }
    catch (Exception exception) { }

  }

  public bool Validar()
  {
      return sucursal.Nombre != null && sucursal.Direccion != null;
  }
}
